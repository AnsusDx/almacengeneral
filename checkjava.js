// üîπ Configuraci√≥n Firebase (poner la tuya)
const firebaseConfig = {
    apiKey: "TU_API_KEY",
    authDomain: "TU_PROJECT_ID.firebaseapp.com",
    databaseURL: "https://TU_PROJECT_ID-default-rtdb.firebaseio.com",
    projectId: "TU_PROJECT_ID",
    storageBucket: "TU_PROJECT_ID.appspot.com",
    messagingSenderId: "TU_SENDER_ID",
    appId: "TU_APP_ID"
};

// Inicializar Firebase
const app = firebase.initializeApp(firebaseConfig);
const database = firebase.database();

// Opciones v√°lidas
const opcionesValidas = ["estrat√©gico", "estrategico",
                         "no estrat√©gico", "no estrategico",
                         "obsoleto"];

// Funci√≥n para guardar en Firebase
function guardarEnFirebase(idEtiqueta, texto) {
    firebase.database().ref('etiquetas/' + idEtiqueta).set({
        estado: texto
    });
}

// Funci√≥n para alternar estado y actualizar texto
function marcarCheckYActualizarTexto(idEtiqueta) {
    const etiqueta = document.getElementById(idEtiqueta);
    const recuadro = etiqueta.querySelector('.recuadro');

    if (recuadro.classList.contains('checked')) {
        const confirmacion = confirm("¬øDesea dejar este elemento 'En revisi√≥n'?");
        if (confirmacion) {
            recuadro.classList.remove('checked');
            recuadro.textContent = '‚òê En revisi√≥n';
            guardarEnFirebase(idEtiqueta, "En revisi√≥n");
        }
    } else {
        let nuevoTexto = '';
        while (!opcionesValidas.includes(nuevoTexto.toLowerCase())) {
            nuevoTexto = prompt("Seleccione el estado (Estrat√©gico, No estrat√©gico, Obsoleto):");
            if (!opcionesValidas.includes(nuevoTexto.toLowerCase())) {
                alert("La palabra ingresada no es correcta. Intente nuevamente.");
            }
        }

        // Normalizar texto
        const textoLower = nuevoTexto.toLowerCase();
        if (["estrat√©gico", "estrategico"].includes(textoLower)) nuevoTexto = "Estrat√©gico";
        else if (["no estrat√©gico", "no estrategico"].includes(textoLower)) nuevoTexto = "No estrat√©gico";
        else if (textoLower === "obsoleto") nuevoTexto = "Obsoleto";

        recuadro.textContent = `‚òë ${nuevoTexto}`;
        recuadro.classList.add('checked');
        guardarEnFirebase(idEtiqueta, nuevoTexto);
    }
}

// Funci√≥n para cargar estados desde Firebase
function cargarEstadoEtiquetasYTexto() {
    const etiquetas = document.querySelectorAll('.etiqueta');

    etiquetas.forEach(etiqueta => {
        const recuadro = etiqueta.querySelector('.recuadro');
        const idEtiqueta = etiqueta.id;

        // Escucha en tiempo real
        firebase.database().ref('etiquetas/' + idEtiqueta).on('value', snapshot => {
            const textoGuardado = snapshot.val() ? snapshot.val().estado : null;

            if (!textoGuardado) {
                recuadro.textContent = '‚òê';
                recuadro.classList.remove('checked');
            } else if (textoGuardado === "En revisi√≥n") {
                recuadro.textContent = '‚òê En revisi√≥n';
                recuadro.classList.remove('checked');
            } else {
                recuadro.textContent = `‚òë ${textoGuardado}`;
                recuadro.classList.add('checked');
            }
        });

        // Evento click
        recuadro.onclick = () => marcarCheckYActualizarTexto(idEtiqueta);
    });
}

// Inicializar al cargar la p√°gina
window.onload = cargarEstadoEtiquetasYTexto;
